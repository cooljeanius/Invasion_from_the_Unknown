#textdomain wesnoth-Invasion_from_the_Unknown

#define FLASH_PURPLE ACTION_WML
    {COLOR_ADJUST 67 0 67}
    {COLOR_ADJUST 100 0 100}
    {ACTION_WML}
    {COLOR_ADJUST 33 0 33}
    {COLOR_ADJUST 0 0 0}
#enddef

#define REVEAL X Y
    [remove_shroud]
        x={X}
        y={Y}
        side=1
    [/remove_shroud]

    {SCROLL_TO_LOCATION_AND_RETURN_TO_PRIMARY_UNIT {X} {Y} }
#enddef

#define REVEAL_AREA X1 Y1 X2 Y2
    # X0 = (X2 - X1) / 2 + X1 = X2 / 2 - X1 / 2 + X1 = X2 / 2 + -X1 / 2 + 2 X1 / 2 = X2 / 2 + X1 / 2
    # Y0 = (Y2 + Y1) / 2
    #
    # This should be little runtime load in terms of CPU time

    {VARIABLE     temp_REVEAL_AREA_center.x {X2} }
    {VARIABLE_ADD temp_REVEAL_AREA_center.x {X1} }
    {VARIABLE     temp_REVEAL_AREA_center.y {Y2} }
    {VARIABLE_ADD temp_REVEAL_AREA_center.y {Y1} }

    {VARIABLE_DIV temp_REVEAL_AREA_center.x 2}
    {VARIABLE_DIV temp_REVEAL_AREA_center.y 2}

    [remove_shroud]
        x={X1}-{X2}
        y={Y1}-{Y2}
        side=1
    [/remove_shroud]

    {SCROLL_TO_LOCATION_AND_RETURN_TO_PRIMARY_UNIT $temp_REVEAL_AREA_center.x $temp_REVEAL_AREA_center.y}

    {CLEAR_VARIABLE temp_REVEAL_AREA_center}
#enddef

#define QUAKE_HEAVY _SOUND
    [quake_heavy]
        sound={_SOUND}
    [/quake_heavy]
#enddef

#define QUAKE_HEAVIER _SOUND
    [quake_heavier]
        sound={_SOUND}
    [/quake_heavier]
#enddef

#
# Place _NUM items on hexes matching _SLF, each a random image picked from
# _IMAGELIST. No collision checks are performed, so a single hex may wind up
# overlayed with multiple images.
#
#define SCATTER_RANDOM_IMAGE _SLF _NUM _IMAGELIST
    [scatter_images]
        {_SLF}
        image={_IMAGELIST}
        limit={_NUM}
    [/scatter_images]
#enddef

# kate: indent-mode normal; encoding utf-8; space-indent on;
