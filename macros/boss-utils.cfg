#textdomain wesnoth-Invasion_from_the_Unknown

#define BOSS_SCENARIO_NOTE
    {OBJECTIVE_NOTE ( _ "You may recruit or recall troops during the first turn only, until all your recruitment space is used")}
    {OBJECTIVE_NOTE ( _ "Your income is disabled and you may not obtain gold from villages")}
#enddef

#define BOSS_BOOST _HITPOINTS_INCREASE _MELEE_DMG_INCREASE _MELEE_STRIKES_INCREASE _RANGED_DMG_INCREASE _RANGED_STRIKES_INCREASE
    [object]
        silent=yes
        [effect]
            apply_to=hitpoints
            increase_total={_HITPOINTS_INCREASE}
        [/effect]
        [effect]
            apply_to=attack
            range=melee
            increase_damage={_MELEE_DMG_INCREASE}
            increase_attacks={_MELEE_STRIKES_INCREASE}
        [/effect]
        [effect]
            apply_to=attack
            range=ranged
            increase_damage={_RANGED_DMG_INCREASE}
            increase_attacks={_RANGED_STRIKES_INCREASE}
        [/effect]
    [/object]
#enddef

#define DEPLOY_PROVISIONAL_PLAYER_KEEP
    [store_starting_location]
        side=1
        variable=temp_DPPK_loc
    [/store_starting_location]

    [terrain]
        x=$temp_DPPK_loc.x
        y=$temp_DPPK_loc.y
        radius=1
        terrain=Ce
    [/terrain]

    [terrain]
        x=$temp_DPPK_loc.x
        y=$temp_DPPK_loc.y
        terrain=Ke
    [/terrain]

    {CLEAR_VARIABLE temp_DPPK_loc}
#enddef

#define REMOVE_PROVISIONAL_PLAYER_KEEP
    [store_starting_location]
        side=1
        variable=temp_RPPK_loc
    [/store_starting_location]

    [terrain]
        x=$temp_RPPK_loc.x
        y=$temp_RPPK_loc.y
        radius=1
        terrain=Re
    [/terrain]

    {CLEAR_VARIABLE temp_RPPK_loc}
#enddef

#define BOSS_SCENARIO_PLAYER_RECRUITMENT
    [event]
        name=prestart

        [modify_side]
            side=1
            {NO_INCOME}
            village_gold=0
        [/modify_side]

        {DEPLOY_PROVISIONAL_PLAYER_KEEP}
    [/event]

    # Facilities to set gold to 0 and disable recruiting on turn 2; after that, gold and
    # recruitment list are restored at victory event
    [event]
        name=turn 2

        [store_side]
            side=1
            variable=boss_side1_store
        [/store_side]

        {VARIABLE side1_restore_info.recruit $boss_side1_store.recruit}
        {VARIABLE side1_restore_info.gold $boss_side1_store.gold}

        [modify_side]
            side=1
            gold=0
        [/modify_side]

        {DISALLOW_RECRUIT 1 $side1_restore_info.recruit}

        {CLEAR_VARIABLE boss_side1_store}

        {REMOVE_PROVISIONAL_PLAYER_KEEP}
    [/event]

    [event]
        name=victory

        [modify_side]
            side=1
            recruit=$side1_restore_info.recruit
            gold=$side1_restore_info.gold
        [/modify_side]

        {CLEAR_VARIABLE side1_restore_info}

        # Restore non-loyaltiness
        [store_unit]
            [filter]
                side=1
                {NOT_ON_RECALL_LIST}
                [not]
                    canrecruit=yes
                [/not]
                [not]
                    id=Anlindë,Mal Keshar,Elynia,Erathan,Igor,Lédinor,Althurin,King Asthorgar
                [/not]
            [/filter]
            kill=no
            variable=noloyalty_store
        [/store_unit]

        [foreach]
            array=noloyalty_store
            variable=noloyalty_unit
            [do]
                {VARIABLE noloyalty_unit.upkeep $noloyalty_unit.variables.temp_boss_scenario_upkeep_former}

                {CLEAR_VARIABLE noloyalty_unit.variables.temp_boss_scenario_upkeep_former}

                [unstore_unit]
                    variable=noloyalty_unit
                    find_vacant=no
                [/unstore_unit]
            [/do]
        [/foreach]

        {CLEAR_VARIABLE noloyalty_store}
    [/event]

    # Make recalled and recruited units loyal for the remaining of this scenario
    [event]
        name=prerecruit
        first_time_only=no
        [filter]
            side=1
        [/filter]

        {VARIABLE unit.variables.temp_boss_scenario_upkeep_former $unit.upkeep}

        {VARIABLE unit.upkeep loyal}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]

    [event]
        name=prerecall
        first_time_only=no
        [filter]
            side=1
        [/filter]

        {VARIABLE unit.variables.temp_boss_scenario_upkeep_former $unit.upkeep}

        {VARIABLE unit.upkeep loyal}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
#enddef

#define FINAL_SCENARIO_PLAYER_RECRUITMENT
    [event]
        name=prerecruit,prerecall
        first_time_only=no
        [filter]
            side=1
        [/filter]

        [fire_event]
            name=remove unit upkeep
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
        [/fire_event]
    [/event]

    [event]
        name=post advance
        first_time_only=no
        [filter]
            side=1
            type=Soulless
        [/filter]

        [fire_event]
            name=remove unit upkeep
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
        [/fire_event]
    [/event]

    [event]
        name=remove unit upkeep
        first_time_only=no

        # This never reverted later, so we don't need to rememver the
        # previous value.
        {VARIABLE unit.upkeep loyal}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]
    [/event]
#enddef

#define FINAL_SCENARIO_PLAYER_RECRUITMENT_WITH_AUTORECALL
    {FINAL_SCENARIO_PLAYER_RECRUITMENT}

    [event]
        name=prestart

        [recall_all]
            side=1
        [/recall_all]
    [/event]
#enddef

#define BOSS_IMMORTALITY _ID _COND _REPLENISH_PERCENTAGE
    [event]
        id=boss_immortality_handler
        name=last breath
        first_time_only=no
        [filter]
            id={_ID}
        [/filter]
        [filter_second_attack]
            [not]
                name=union
            [/not]
        [/filter_second_attack]
        [filter_condition]
            {_COND}
        [/filter_condition]

        {VARIABLE temp_FBI_old_hp $unit.hitpoints}

        {VARIABLE unit.hitpoints "$($unit.max_hitpoints * ("+{_REPLENISH_PERCENTAGE}+"/100.0))"}

        # Deduct the killing XP from the attacker.

        {LOG_IFTU_DBG "boss_immortality_handler: reset to "+{_REPLENISH_PERCENTAGE}+"% HP ($temp_FBI_old_hp -> $unit.hitpoints of $unit.max_hitpoints)"}
        {LOG_IFTU_DBG "boss_immortality_handler: deducting $(max([4, 8 * $unit.level])) XP from $second_unit.id"}

        {VARIABLE_MIN second_unit.experience "$(max([4, 8 * $unit.level]))"}

        [unstore_unit]
            variable=unit
            find_vacant=no
            {COLOR_HEAL}
            text=$temp_FBI_old_hp
        [/unstore_unit]

        [unstore_unit]
            variable=second_unit
            find_vacant=no
        [/unstore_unit]

        {CLEAR_VARIABLE temp_FBI_old_hp}

        [fire_event]
            name=boss revived
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
        [/fire_event]
    [/event]
#enddef

#define DISABLE_BOSS_IMMORTALITY
    [remove_event]
        id=boss_immortality_handler
    [/remove_event]
#enddef

# Helper macros to propagate the event context to chained events with
# [fire_event].
#define PROPAGATE_FULL_EVENT_CONTEXT
    [primary_unit]
        x,y=$x1,$y1
    [/primary_unit]
    [secondary_unit]
        x,y=$x2,$y2
    [/secondary_unit]
    [insert_tag]
        name=primary_attack
        variable=weapon
    [/insert_tag]
    [insert_tag]
        name=secondary_attack
        variable=second_weapon
    [/insert_tag]
#enddef

#define PROPAGATE_FULL_EVENT_CONTEXT_INVERTED
    [primary_unit]
        x,y=$x2,$y2
    [/primary_unit]
    [secondary_unit]
        x,y=$x1,$y1
    [/secondary_unit]
    [insert_tag]
        name=primary_attack
        variable=second_weapon
    [/insert_tag]
    [insert_tag]
        name=secondary_attack
        variable=weapon
    [/insert_tag]
#enddef

# NOTE: S23B uses an ad-hoc variant of this code. Keep an eye on that if any
#       changes or fixes are required here.
#define BOSS_ABSORB_DAMAGE_EX _ID _COND _REGEN_FORMULA _FINAL_FILTERS
    [event]
        id=boss_absorbdmg_handler
        name=boss absorb damage
        first_time_only=no

        {_FINAL_FILTERS} # HACK

        [set_variables]
            name=unit
            mode=merge
            [value]
                hitpoints={_REGEN_FORMULA}
                [status]
                    poisoned=no
                    slowed=no
                    petrified=no
                [/status]
            [/value]
        [/set_variables]

        [unstore_unit]
            find_vacant=no
            variable=unit
            {COLOR_HEAL}
            male_text= _ "absorbed damage"
            female_text= _ "female^absorbed damage"
        [/unstore_unit]
    [/event]

    [event]
        name=attacker hits
        first_time_only=no
        [filter_second]
            id={_ID}
        [/filter_second]
        [filter_condition]
            {_COND}
        [/filter_condition]

        [fire_event]
            name=boss absorb damage
            {PROPAGATE_FULL_EVENT_CONTEXT_INVERTED}
        [/fire_event]
    [/event]

    [event]
        name=defender hits
        first_time_only=no
        [filter]
            id={_ID}
        [/filter]
        [filter_condition]
            {_COND}
        [/filter_condition]

        [fire_event]
            name=boss absorb damage
            {PROPAGATE_FULL_EVENT_CONTEXT}
        [/fire_event]
    [/event]
#enddef

#
# Stock values for _REGEN_FORMULA in BOSS_ABSORB_DAMAGE_EX.
#

#define BOSS_REGEN_FULL_HP
"$unit.max_hitpoints" #enddef

# NOTE: second argument is rounded because min()/max() get completely confused
#       by decimal values.
#define BOSS_REGEN_ATTACK_DAMAGE _FACTOR
"$( min($unit.max_hitpoints, round({_FACTOR}*$damage_inflicted + $unit.hitpoints)) )" #enddef

#define BOSS_ABSORB_FULL_DAMAGE _ID _COND
    {BOSS_ABSORB_DAMAGE_EX ({_ID}) ({_COND}) ({BOSS_REGEN_FULL_HP}) ()}
#enddef

# kate: indent-mode normal; encoding utf-8; space-indent on;
