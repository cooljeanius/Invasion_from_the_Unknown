#textdomain wesnoth-Invasion_from_the_Unknown

#
# Use to define a generic initial unit in a [side] definition. Units created
# this way always have zero upkeep, without any visual indication on purpose.
#
#define SIDE_GENERIC_UNIT _TYPE _X _Y
    [unit]
        type={_TYPE}
        x={_X}
        y={_Y}
        random_traits=yes
        random_gender=yes
        generate_name=yes
        upkeep=free
    [/unit]
#enddef

#
# Use to define a generic initial guardian unit in a [side] definition. Units
# created this way always have zero upkeep, without any visual indication on
# purpose.
#
#define SIDE_GENERIC_GUARD _TYPE _X _Y
    [unit]
        type={_TYPE}
        x={_X}
        y={_Y}
        random_traits=yes
        random_gender=yes
        generate_name=yes
        upkeep=free
        ai_special=guardian
    [/unit]
#enddef

# Macros PLACE_UNITS_RANDOMLY, RANDOM_PLACEMENT_AREA, CLEAR_PLACEMENT_AREA, RANDOM_PLACEMENT
# were written by Rhuvaen for UtBS (1.3.x), and directly copied with minor modifications
#
# Many macros were written by Shadow Master on 2006, others were on 2007-2008
# wmllint: validate-off
# wmllint: unbalanced-on
# wmlindent: start ignoring
#define DIRECTION_ALL
n,s,ne,nw,se,sw#enddef
# wmlindent: stop ignoring

#define RANDOM_PLACEMENT_AREA _SLF
    # set a placement area for subsequent random placement of units
    [store_locations]
        variable=temp_PUR_locs
        {_SLF}
    [/store_locations]
#enddef

#define PLACE_UNITS_RANDOMLY _TYPE _SIDE _NUM _UNIT_WML
    {REPEAT {_NUM} (
        {VARIABLE_RANDOM temp_PUR_n "0..$($temp_PUR_locs.length - 1)"}

        [unit]
            side={_SIDE}
            type={_TYPE}
            x,y=$temp_PUR_locs[$temp_PUR_n].x,$temp_PUR_locs[$temp_PUR_n].y

            random_gender=yes
            random_traits=yes
            generate_name=yes
            upkeep=full
            animate=yes

            {_UNIT_WML}
        [/unit]

        {CLEAR_VARIABLE temp_PUR_n}
    )}
#enddef

#define CLEAR_PLACEMENT_AREA
    {CLEAR_VARIABLE temp_PUR_locs}
#enddef

#define ROLE _ROLE_TAG _SUF
    [role]
        role={_ROLE_TAG}
        {_SUF}
    [/role]
    [if]
        [not]
            [have_unit]
                {NOT_ON_RECALL_LIST}
                role={_ROLE_TAG}
            [/have_unit]
        [/not]
        [then]
            {RECALL_SUF (role={_ROLE_TAG})}
        [/then]
    [/if]
#enddef

#define REMOVE_ROLE _ROLE_TAG
    [store_unit]
        [filter]
            role={_ROLE_TAG}
        [/filter]
        variable=_varMT_unit_REMOVE_ROLE
    [/store_unit]
    {FOREACH _varMT_unit_REMOVE_ROLE i}
        {CLEAR_VARIABLE _varMT_unit_REMOVE_ROLE[$i].role}
        [unstore_unit]
            variable=_varMT_unit_REMOVE_ROLE[$i]
            find_vacant=no
        [/unstore_unit]
    {NEXT i}
#enddef

#define SHAXTHAL_SURFACE_VARIATION
    variation=surface
#enddef

# wmllint: unbalanced-off
# wmllint: validate-on

#define ELVISH_SUPPORTER_ROLE ROLE
    [role]
        role={ROLE}
        type=Elvish Sylph,Elvish Shyde,Elvish Avenger,Elvish Sharpshooter,Elvish Enchantress,Elvish Enchantress 2,Elvish Champion,Elvish Marshal,Elvish Outrider,Elvish Ranger,Elvish Marksman,Elvish Sorceress,Elvish Hero,Elvish Captain,Elvish Druid,Elvish Rider,Elvish Archer,Elvish Fighter,Elvish Shaman,Elvish Civilian,Elvish Prowler,Elvish Trapper,Elvish Hunter # (ordered according to portraits)
        side=1
        [not]
            id=AnlindÃ«,Galas
        [/not]
    [/role]
#enddef

#ifdef 0

#
# FIXME: gfgtdf pointed out that MAKE_TIMED_LOYAL does not work as intended
#        due to an oversight in the implementation of duration=scenario in
#        1.12, causing it to make units permanently loyal event past the end of
#        the scenario. So disable it for version 2.0.0.
#

#define MAKE_TIMED_LOYAL _SUF
    [object]
        silent=yes
        duration=scenario
        [filter]
            {_SUF}
        [/filter]
        [effect]
            apply_to=loyal
        [/effect]
    [/object]
#enddef

#else

#define MAKE_TIMED_LOYAL _SUF
#enddef

#endif

#
# Tries to find a suitable elvish supporter for
# recall; if that fails, it creates them. This ensures
# dialogues can go on.
#
#define ELVISH_SUPPORTER R_ID
    [if]
        [not]
            [have_unit]
                role={R_ID}
                side=1
            [/have_unit]
        [/not]
        [then]
            {ELVISH_SUPPORTER_ROLE ({R_ID})}

            [recall]
                role={R_ID}
            [/recall]

            [if]
                [not]
                    [have_unit]
                        role={R_ID}
                        side=1
                    [/have_unit]
                [/not]
                [then]
                    {VARIABLE_RANDOM temp_ELVISH_SUPPORTER_type "Archer,Fighter,Hunter,Shaman,Scout,Civilian"}

                    [unit]
                        role={R_ID}
                        type="Elvish $temp_ELVISH_SUPPORTER_type"
                        side=1
                        placement=leader
                        generate_name=yes
                        random_gender=yes
                        random_traits=yes
                    [/unit]

                    {CLEAR_VARIABLE temp_ELVISH_SUPPORTER_type}
                [/then]
            [/if]

            {MAKE_TIMED_LOYAL (role={R_ID})}
        [/then]
    [/if]
#enddef

#define UNPETRIFY_UNITS_AT_TURN_START _SIDE _ADJACENT_TO_SUF
    [event]
        name="side "+{_SIDE}+" turn refresh"
        first_time_only=no

        [store_unit]
            [filter]
                side={_SIDE}
                status=petrified
                [filter_adjacent]
                    {_ADJACENT_TO_SUF}
                [/filter_adjacent]
            [/filter]
            variable=petrified_units
        [/store_unit]

        [foreach]
            array=petrified_units
            variable=petrified_unit
            [do]
                {CLEAR_VARIABLE petrified_unit.status.petrified}

                [unstore_unit]
                    variable=petrified_unit
                    find_vacant=no
                    male_text= _ "unpetrified"
                    female_text= _ "female^unpetrified"
                    {COLOR_HEAL}
                [/unstore_unit]
            [/do]
        [/foreach]

        {CLEAR_VARIABLE petrified_units}
    [/event]
#enddef

# kate: indent-mode normal; encoding utf-8; space-indent on;
